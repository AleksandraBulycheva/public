# Написать программу, которая читая символы из бесконечной последовательности (эмулируется конечным файлом, читающимся поблочно),
# распознает, преобразует и выводит на экран лексемы по определенному правилу.
# Лексемы разделены пробелами. Преобразование делать по возможности через словарь.
# Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа.
# Регулярные выражения использовать нельзя
# Вариант 4.
# Вещественные числа, заключенные в кавычки (все виды). Кавычки не выводятся. Целая часть числа выводится словами.
def digit_to_word(digit):
    return {
        '0': 'ноль', '1': 'один', '2': 'два', '3': 'три',
        '4': 'четыре', '5': 'пять', '6': 'шесть', '7': 'семь',
        '8': 'восемь', '9': 'девять'
    }[digit]

def integer_to_words(integer_str):
    return ' '.join(digit_to_word(digit) for digit in integer_str)

def find_and_convert_numbers(file_path):
    with open(file_path, 'r') as file:
        quote_open = False
        buffer = ''
        for block in iter(lambda: file.read(1024), ''):
            for char in block:
                if char in ('"', "'"):
                    if quote_open:
                        if buffer.replace('.', '', 1).isdigit() and '.' in buffer:
                            integer_part, decimal_part = buffer.split('.')
                            print(integer_to_words(integer_part), decimal_part)
                        buffer = ''
                    quote_open = not quote_open
                elif quote_open:
                    buffer += char
                elif char == ' ' and buffer:
                    buffer = ''

file_path = 'input.txt'
find_and_convert_numbers(file_path)
